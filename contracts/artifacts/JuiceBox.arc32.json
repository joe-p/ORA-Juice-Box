{
  "hints": {
    "createApplication(application,asset)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIntoORA()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mine(pay,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim(uint64,address,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "orangeApp": {
          "type": "uint64",
          "key": "orangeApp"
        },
        "orangeAsa": {
          "type": "uint64",
          "key": "orangeAsa"
        },
        "epoch": {
          "type": "uint64",
          "key": "epoch"
        },
        "totalOra": {
          "type": "uint64",
          "key": "totalOra"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDkKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuNjcuMAovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAppbnQgMAo+CmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCBjcmVhdGVfTm9PcCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIE5PVF9JTVBMRU1FTlRFRCBOT1RfSU1QTEVNRU5URUQgTk9UX0lNUExFTUVOVEVEIGNhbGxfTm9PcAoKTk9UX0lNUExFTUVOVEVEOgoJZXJyCgphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CgkvLyBhc2E6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyBhcHA6IGFwcGxpY2F0aW9uCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgl0eG5hcyBBcHBsaWNhdGlvbnMKCgkvLyBleGVjdXRlIGNyZWF0ZUFwcGxpY2F0aW9uKGFzc2V0LGFwcGxpY2F0aW9uKXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludCAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKGFzc2V0LGFwcGxpY2F0aW9uKXZvaWQKY3JlYXRlQXBwbGljYXRpb246Cglwcm90byAyIDAKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MzcKCS8vIHRoaXMub3JhbmdlQXBwLnZhbHVlID0gYXBwCglieXRlIDB4NmY3MjYxNmU2NzY1NDE3MDcwIC8vICJvcmFuZ2VBcHAiCglmcmFtZV9kaWcgLTEgLy8gYXBwOiBBcHBsaWNhdGlvbgoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MzgKCS8vIHRoaXMub3JhbmdlQXNhLnZhbHVlID0gYXNhCglieXRlIDB4NmY3MjYxNmU2NzY1NDE3MzYxIC8vICJvcmFuZ2VBc2EiCglmcmFtZV9kaWcgLTIgLy8gYXNhOiBBc3NldAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKYWJpX3JvdXRlX29wdEludG9PUkE6CgkvLyBleGVjdXRlIG9wdEludG9PUkEoKXZvaWQKCWNhbGxzdWIgb3B0SW50b09SQQoJaW50IDEKCXJldHVybgoKLy8gb3B0SW50b09SQSgpdm9pZApvcHRJbnRvT1JBOgoJcHJvdG8gMCAwCgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjQyCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IHRoaXMub3JhbmdlQXNhLnZhbHVlLAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IDAsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnQgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NDMKCS8vIHhmZXJBc3NldDogdGhpcy5vcmFuZ2VBc2EudmFsdWUKCWJ5dGUgMHg2ZjcyNjE2ZTY3NjU0MTczNjEgLy8gIm9yYW5nZUFzYSIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czo0NAoJLy8gYXNzZXRBbW91bnQ6IDAKCWludCAwCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjQ1CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgphYmlfcm91dGVfbWluZToKCS8vIHRvOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50IDMyCgk9PQoJYXNzZXJ0CgoJLy8gbWJyQW5kRmVlUGF5bWVudDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50IDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludCBwYXkKCT09Cglhc3NlcnQKCgkvLyBleGVjdXRlIG1pbmUoYWRkcmVzcyxwYXkpdm9pZAoJY2FsbHN1YiBtaW5lCglpbnQgMQoJcmV0dXJuCgovLyBtaW5lKGFkZHJlc3MscGF5KXZvaWQKLy8KLy8gTWluZSBPUkEKLy8KLy8gQHBhcmFtIG1ickFuZEZlZVBheW1lbnQgUGF5bWVudCB0byB0aGlzIGFwcCB0aGF0IGNvdmVycyB0aGUganVpY2UgZmVlIGFuZCBhbnkgbmVjZXNzYXJ5IE1CUnMKLy8gQHBhcmFtIHRvCm1pbmU6Cglwcm90byAyIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoJZHVwbiA0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjU2CgkvLyB2ZXJpZnlQYXlUeG4obWJyQW5kRmVlUGF5bWVudCwgeyByZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcyB9KQoJLy8gdmVyaWZ5IHJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gbWJyQW5kRmVlUGF5bWVudDogUGF5VHhuCglndHhucyBSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NTgKCS8vIGp1aWNlcjogSnVpY2VySUQgPSB7CgkvLyAgICAgICBlcG9jaDogdGhpcy5lcG9jaC52YWx1ZSwKCS8vICAgICAgIGFkZHJlc3M6IHRvLAoJLy8gICAgIH0KCWZyYW1lX2RpZyAtMiAvLyB0bzogQWRkcmVzcwoJYnl0ZSAweDY1NzA2ZjYzNjggLy8gImVwb2NoIgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWNvbmNhdAoJZnJhbWVfYnVyeSAwIC8vIGp1aWNlcjogSnVpY2VySUQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NjMKCS8vIGp1aWNlQW1vdW50ID0gbWJyQW5kRmVlUGF5bWVudC5hbW91bnQKCWZyYW1lX2RpZyAtMSAvLyBtYnJBbmRGZWVQYXltZW50OiBQYXlUeG4KCWd0eG5zIEFtb3VudAoJZnJhbWVfYnVyeSAxIC8vIGp1aWNlQW1vdW50OiB1aW50NjQKCgkvLyBpZjBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NjUKCS8vICF0aGlzLmp1aWNlcnMoanVpY2VyKS5leGlzdHMKCWZyYW1lX2RpZyAwIC8vIGp1aWNlcjogSnVpY2VySUQKCWJveF9sZW4KCXN3YXAKCXBvcAoJIQoJYnogaWYwX2VuZAoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NjYKCS8vIHByZU1CUiA9IHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZQoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0TWluQmFsYW5jZQoJYXNzZXJ0CglmcmFtZV9idXJ5IDIgLy8gcHJlTUJSOiB1aW50NjQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6NjcKCS8vIHRoaXMuanVpY2VycyhqdWljZXIpLnZhbHVlID0geyBqdWljZWQ6IDAsIGNsYWltZWQ6IDAgfQoJZnJhbWVfZGlnIDAgLy8ganVpY2VyOiBKdWljZXJJRAoJYnl0ZSAweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwCglib3hfcHV0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjY4CgkvLyBqdWljZUFtb3VudCA9IGp1aWNlQW1vdW50IC0gKHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZSAtIHByZU1CUikKCWZyYW1lX2RpZyAxIC8vIGp1aWNlQW1vdW50OiB1aW50NjQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCWFzc2VydAoJZnJhbWVfZGlnIDIgLy8gcHJlTUJSOiB1aW50NjQKCS0KCS0KCWZyYW1lX2J1cnkgMSAvLyBqdWljZUFtb3VudDogdWludDY0CgppZjBfZW5kOgoJLy8gaWYxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjcxCgkvLyAhdGhpcy5lcG9jaHModGhpcy5lcG9jaC52YWx1ZSkuZXhpc3RzCglieXRlIDB4NjU3MDZmNjM2OCAvLyAiZXBvY2giCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJYm94X2xlbgoJc3dhcAoJcG9wCgkhCglieiBpZjFfZW5kCgoJLy8gaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czo3MgoJLy8gcHJlTUJSID0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglhc3NlcnQKCWZyYW1lX2J1cnkgMyAvLyBwcmVNQlI6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czo3MwoJLy8gdGhpcy5lcG9jaHModGhpcy5lcG9jaC52YWx1ZSkudmFsdWUgPSB7CgkvLyAgICAgICAgIHN0YXJ0OiBnbG9iYWxzLnJvdW5kIC0gKGdsb2JhbHMucm91bmQgJSA1KSwKCS8vICAgICAgICAgZW5kOiAwLAoJLy8gICAgICAgICB0b3RhbEp1aWNlZDogMCwKCS8vICAgICAgICAgbWluZWQ6IDAsCgkvLyAgICAgICB9CglieXRlIDB4NjU3MDZmNjM2OCAvLyAiZXBvY2giCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJZ2xvYmFsIFJvdW5kCglnbG9iYWwgUm91bmQKCWludCA1CgklCgktCglpdG9iCglieXRlIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0Cglib3hfcHV0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjc5CgkvLyBqdWljZUFtb3VudCA9IGp1aWNlQW1vdW50IC0gKHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZSAtIHByZU1CUikKCWZyYW1lX2RpZyAxIC8vIGp1aWNlQW1vdW50OiB1aW50NjQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCWFzc2VydAoJZnJhbWVfZGlnIDMgLy8gcHJlTUJSOiB1aW50NjQKCS0KCS0KCWZyYW1lX2J1cnkgMSAvLyBqdWljZUFtb3VudDogdWludDY0CgppZjFfZW5kOgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjgyCgkvLyBzZW5kTWV0aG9kQ2FsbDxbQWRkcmVzc10sIHZvaWQ+KHsKCS8vICAgICAgIG5hbWU6ICdtaW5lJywKCS8vICAgICAgIGFwcGxpY2F0aW9uSUQ6IHRoaXMub3JhbmdlQXBwLnZhbHVlLAoJLy8gICAgICAgbWV0aG9kQXJnczogW3RoaXMuYXBwLmFkZHJlc3NdLAoJLy8gICAgICAgZmVlOiBqdWljZUFtb3VudCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50IGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCW1ldGhvZCAibWluZShhZGRyZXNzKXZvaWQiCglpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czo4NAoJLy8gYXBwbGljYXRpb25JRDogdGhpcy5vcmFuZ2VBcHAudmFsdWUKCWJ5dGUgMHg2ZjcyNjE2ZTY3NjU0MTcwNzAgLy8gIm9yYW5nZUFwcCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uSUQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6ODUKCS8vIG1ldGhvZEFyZ3M6IFt0aGlzLmFwcC5hZGRyZXNzXQoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjg2CgkvLyBmZWU6IGp1aWNlQW1vdW50CglmcmFtZV9kaWcgMSAvLyBqdWljZUFtb3VudDogdWludDY0CglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6OTEKCS8vIHRoaXMuanVpY2VycyhqdWljZXIpLnZhbHVlLmp1aWNlZCA9IHRoaXMuanVpY2VycyhqdWljZXIpLnZhbHVlLmp1aWNlZCArIG1ickFuZEZlZVBheW1lbnQuYW1vdW50CglpbnQgMAoJZnJhbWVfZGlnIDAgLy8ganVpY2VyOiBKdWljZXJJRAoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDAgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIG1ickFuZEZlZVBheW1lbnQ6IFBheVR4bgoJZ3R4bnMgQW1vdW50CgkrCglpdG9iCglmcmFtZV9kaWcgMCAvLyBqdWljZXI6IEp1aWNlcklECgljb3ZlciAyCglib3hfcmVwbGFjZQoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czo5MgoJLy8gdGhpcy5lcG9jaHModGhpcy5lcG9jaC52YWx1ZSkudmFsdWUudG90YWxKdWljZWQgPQoJLy8gICAgICAgdGhpcy5lcG9jaHModGhpcy5lcG9jaC52YWx1ZSkudmFsdWUudG90YWxKdWljZWQgKyBtYnJBbmRGZWVQYXltZW50LmFtb3VudAoJaW50IDE2CglieXRlIDB4NjU3MDZmNjM2OCAvLyAiZXBvY2giCglhcHBfZ2xvYmFsX2dldAoJaXRvYgoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDE2IDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBtYnJBbmRGZWVQYXltZW50OiBQYXlUeG4KCWd0eG5zIEFtb3VudAoJKwoJaXRvYgoJYnl0ZSAweDY1NzA2ZjYzNjggLy8gImVwb2NoIgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWNvdmVyIDIKCWJveF9yZXBsYWNlCglyZXRzdWIKCi8vIGVuZEVwb2NoKCl2b2lkCmVuZEVwb2NoOgoJcHJvdG8gMCAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGUgMHgKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6OTcKCS8vIG9yYU1pbmVkID0gdGhpcy50b3RhbE9yYS52YWx1ZSAtIHRoaXMuYXBwLmFkZHJlc3MuYXNzZXRCYWxhbmNlKHRoaXMub3JhbmdlQXNhLnZhbHVlKQoJYnl0ZSAweDc0NmY3NDYxNmM0ZjcyNjEgLy8gInRvdGFsT3JhIgoJYXBwX2dsb2JhbF9nZXQKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglieXRlIDB4NmY3MjYxNmU2NzY1NDE3MzYxIC8vICJvcmFuZ2VBc2EiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglhc3NlcnQKCS0KCWZyYW1lX2J1cnkgMCAvLyBvcmFNaW5lZDogdWludDY0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjk4CgkvLyBhc3NlcnQob3JhTWluZWQpCglmcmFtZV9kaWcgMCAvLyBvcmFNaW5lZDogdWludDY0Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MTAwCgkvLyB0aGlzLmVwb2Nocyh0aGlzLmVwb2NoLnZhbHVlKS52YWx1ZS5lbmQgPSBnbG9iYWxzLnJvdW5kICUgNQoJaW50IDgKCWdsb2JhbCBSb3VuZAoJaW50IDUKCSUKCWl0b2IKCWJ5dGUgMHg2NTcwNmY2MzY4IC8vICJlcG9jaCIKCWFwcF9nbG9iYWxfZ2V0CglpdG9iCgljb3ZlciAyCglib3hfcmVwbGFjZQoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMDEKCS8vIHRoaXMuZXBvY2hzKHRoaXMuZXBvY2gudmFsdWUpLnZhbHVlLm1pbmVkID0gb3JhTWluZWQKCWludCAyNAoJZnJhbWVfZGlnIDAgLy8gb3JhTWluZWQ6IHVpbnQ2NAoJaXRvYgoJYnl0ZSAweDY1NzA2ZjYzNjggLy8gImVwb2NoIgoJYXBwX2dsb2JhbF9nZXQKCWl0b2IKCWNvdmVyIDIKCWJveF9yZXBsYWNlCgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjEwMgoJLy8gdGhpcy50b3RhbE9yYS52YWx1ZSArPSBvcmFNaW5lZAoJYnl0ZSAweDc0NmY3NDYxNmM0ZjcyNjEgLy8gInRvdGFsT3JhIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAwIC8vIG9yYU1pbmVkOiB1aW50NjQKCSsKCWJ5dGUgMHg3NDZmNzQ2MTZjNGY3MjYxIC8vICJ0b3RhbE9yYSIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjEwMwoJLy8gdGhpcy5lcG9jaC52YWx1ZSArPSAxCglieXRlIDB4NjU3MDZmNjM2OCAvLyAiZXBvY2giCglhcHBfZ2xvYmFsX2dldAoJaW50IDEKCSsKCWJ5dGUgMHg2NTcwNmY2MzY4IC8vICJlcG9jaCIKCXN3YXAKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCmFiaV9yb3V0ZV9jbGFpbToKCS8vIF9vcmE6IGFzc2V0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglidG9pCgl0eG5hcyBBc3NldHMKCgkvLyB0bzogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZHVwCglsZW4KCWludCAzMgoJPT0KCWFzc2VydAoKCS8vIGVwb2NoOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGNsYWltKGFzc2V0LGFkZHJlc3MsdWludDY0KXZvaWQKCWNhbGxzdWIgY2xhaW0KCWludCAxCglyZXR1cm4KCi8vIGNsYWltKGFzc2V0LGFkZHJlc3MsdWludDY0KXZvaWQKLy8KLy8gQ2xhaW0gT1JBIHByb3BvcnRpb25hbCB0byB0aGUgYW1vdW50IGp1aWNlZCBpbiB0aGUgZ2l2ZW4gZXBvY2gKLy8gQHBhcmFtIGVwb2NoIFRoZSBlcG9jaCB0byBjbGFpbSBmcm9tCi8vIEBwYXJhbSB0byBUaGUgYWRkcmVzcyB0byBzZW5kIHRoZSBPUkEgdG8KLy8gQHBhcmFtIF9vcmEgVGhlIE9SQSBhc3NldCBJRCAoZm9yIHJlZmVyZW5jZSkKY2xhaW06Cglwcm90byAzIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZSAweAoJZHVwbiA0CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjExOAoJLy8ganVpY2VyOiBKdWljZXJJRCA9IHsKCS8vICAgICAgIGVwb2NoOiBlcG9jaCwKCS8vICAgICAgIGFkZHJlc3M6IHRvLAoJLy8gICAgIH0KCWZyYW1lX2RpZyAtMiAvLyB0bzogQWRkcmVzcwoJZnJhbWVfZGlnIC0xIC8vIGVwb2NoOiBudW1iZXIKCWl0b2IKCWNvbmNhdAoJZnJhbWVfYnVyeSAwIC8vIGp1aWNlcjogSnVpY2VySUQKCgkvLyBpZjJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MTIzCgkvLyB0aGlzLmVwb2NocyhlcG9jaCkudmFsdWUuZW5kID09PSAwCglmcmFtZV9kaWcgLTEgLy8gZXBvY2g6IG51bWJlcgoJaXRvYgoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDggOAoJYnRvaQoJaW50IDAKCT09CglieiBpZjJfZW5kCgoJLy8gaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMjMKCS8vIHRoaXMuZW5kRXBvY2goKQoJY2FsbHN1YiBlbmRFcG9jaAoKaWYyX2VuZDoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMjYKCS8vIGFzc2VydCghdGhpcy5qdWljZXJzKGp1aWNlcikudmFsdWUuY2xhaW1lZCkKCWZyYW1lX2RpZyAwIC8vIGp1aWNlcjogSnVpY2VySUQKCWJveF9nZXQKCWFzc2VydAoJZXh0cmFjdCA4IDgKCWJ0b2kKCSEKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMjgKCS8vIGp1aWNlckluZm8gPSB0aGlzLmp1aWNlcnMoanVpY2VyKS52YWx1ZQoJZnJhbWVfZGlnIDAgLy8ganVpY2VyOiBKdWljZXJJRAoJZnJhbWVfYnVyeSAxIC8vIHN0b3JhZ2Uga2V5Ly9qdWljZXJJbmZvCgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjEyOQoJLy8gZXBvY2hJbmZvID0gdGhpcy5lcG9jaHMoZXBvY2gpLnZhbHVlCglmcmFtZV9kaWcgLTEgLy8gZXBvY2g6IG51bWJlcgoJaXRvYgoJZnJhbWVfYnVyeSAyIC8vIHN0b3JhZ2Uga2V5Ly9lcG9jaEluZm8KCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MTMxCgkvLyBhbW91bnQgPSAoanVpY2VySW5mby5qdWljZWQgLyBlcG9jaEluZm8udG90YWxKdWljZWQpICogZXBvY2hJbmZvLm1pbmVkCglmcmFtZV9kaWcgMSAvLyBzdG9yYWdlIGtleS8vanVpY2VySW5mbwoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDAgOAoJYnRvaQoJZnJhbWVfZGlnIDIgLy8gc3RvcmFnZSBrZXkvL2Vwb2NoSW5mbwoJYm94X2dldAoJYXNzZXJ0CglleHRyYWN0IDE2IDgKCWJ0b2kKCS8KCWZyYW1lX2RpZyAyIC8vIHN0b3JhZ2Uga2V5Ly9lcG9jaEluZm8KCWJveF9nZXQKCWFzc2VydAoJZXh0cmFjdCAyNCA4CglidG9pCgkqCglmcmFtZV9idXJ5IDMgLy8gYW1vdW50OiB1aW50NjQKCgkvLyBjb250cmFjdHMvanVpY2VfYm94LmFsZ28udHM6MTMzCgkvLyB0aGlzLmp1aWNlcnMoanVpY2VyKS52YWx1ZS5jbGFpbWVkID0gMQoJZnJhbWVfZGlnIDAgLy8ganVpY2VyOiBKdWljZXJJRAoJaW50IDgKCWJ5dGUgMHgwMDAwMDAwMDAwMDAwMDAxCglib3hfcmVwbGFjZQoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMzUKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIHhmZXJBc3NldDogdGhpcy5vcmFuZ2VBc2EudmFsdWUsCgkvLyAgICAgICBhc3NldEFtb3VudDogYW1vdW50LAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdG8sCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludCBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMzYKCS8vIHhmZXJBc3NldDogdGhpcy5vcmFuZ2VBc2EudmFsdWUKCWJ5dGUgMHg2ZjcyNjE2ZTY3NjU0MTczNjEgLy8gIm9yYW5nZUFzYSIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9qdWljZV9ib3guYWxnby50czoxMzcKCS8vIGFzc2V0QW1vdW50OiBhbW91bnQKCWZyYW1lX2RpZyAzIC8vIGFtb3VudDogdWludDY0CglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gY29udHJhY3RzL2p1aWNlX2JveC5hbGdvLnRzOjEzOAoJLy8gYXNzZXRSZWNlaXZlcjogdG8KCWZyYW1lX2RpZyAtMiAvLyB0bzogQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgpjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oYXBwbGljYXRpb24sYXNzZXQpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoIGFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoJZXJyCgpjYWxsX05vT3A6CgltZXRob2QgIm9wdEludG9PUkEoKXZvaWQiCgltZXRob2QgIm1pbmUocGF5LGFkZHJlc3Mpdm9pZCIKCW1ldGhvZCAiY2xhaW0odWludDY0LGFkZHJlc3MsYXNzZXQpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoIGFiaV9yb3V0ZV9vcHRJbnRvT1JBIGFiaV9yb3V0ZV9taW5lIGFiaV9yb3V0ZV9jbGFpbQoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "JuiceBox",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "app",
            "type": "application",
            "desc": ""
          },
          {
            "name": "asa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "optIntoORA",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "mine",
        "args": [
          {
            "name": "mbrAndFeePayment",
            "type": "pay",
            "desc": "Payment to this app that covers the juice fee and any necessary MBRs"
          },
          {
            "name": "to",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "Mine ORA",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "claim",
        "args": [
          {
            "name": "epoch",
            "type": "uint64",
            "desc": "The epoch to claim from"
          },
          {
            "name": "to",
            "type": "address",
            "desc": "The address to send the ORA to"
          },
          {
            "name": "_ora",
            "type": "asset",
            "desc": "The ORA asset ID (for reference)"
          }
        ],
        "desc": "Claim ORA proportional to the amount juiced in the given epoch",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}