{
  "hints": {
    "createApplication(application,asset)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIntoORA()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mine(pay,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim(uint64,address,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "orangeApp": {
          "type": "uint64",
          "key": "orangeApp"
        },
        "orangeAsa": {
          "type": "uint64",
          "key": "orangeAsa"
        },
        "epoch": {
          "type": "uint64",
          "key": "epoch"
        },
        "totalOra": {
          "type": "uint64",
          "key": "totalOra"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "JuiceBox",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "app",
            "type": "application",
            "desc": ""
          },
          {
            "name": "asa",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "optIntoORA",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "mine",
        "args": [
          {
            "name": "mbrAndFeePayment",
            "type": "pay",
            "desc": "Payment to this app that covers the juice fee and any necessary MBRs"
          },
          {
            "name": "to",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "Mine ORA",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "claim",
        "args": [
          {
            "name": "epoch",
            "type": "uint64",
            "desc": "The epoch to claim from"
          },
          {
            "name": "to",
            "type": "address",
            "desc": "The address to send the ORA to"
          },
          {
            "name": "_ora",
            "type": "asset",
            "desc": "The ORA asset ID (for reference)"
          }
        ],
        "desc": "Claim ORA proportional to the amount juiced in the given epoch",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}